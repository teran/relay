---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: relay
  labels:
    app.kubernetes.io/name: relay
    app.kubernetes.io/app: relay
    app.kubernetes.io/app-kind: smtp-server
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: relay
      app.kubernetes.io/app: relay
      app.kubernetes.io/app-kind: smtp-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: relay
        app.kubernetes.io/app: relay
        app.kubernetes.io/app-kind: smtp-server
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: relay
          image: ghcr.io/teran/relay:v0.2.0
          env:
          - name: LOG_LEVEL
            value: trace
          - name: ADDR
            value: :25
          - name: ENABLE_TLS
            value: "false"
          # - name: TLS_ADDR
          #   value: :465
          # - name: TLS_CERTIFICATE
          #   valueFrom:
          #     secretKeyRef:
          #       name: relay
          #       key: tls_certificate
          # - name: TLS_KEY
          #   valueFrom:
          #     secretKeyRef:
          #       name: relay
          #       key: tls_key
          - name: ALLOW_INSECURE_AUTH
            value: "true"
          - name: DOMAIN
            value: "example.org"
          - name: DRIVER
            value: printer
          # - name: DRIVER
          #   value: mailgun
          # - name: MAILGUN_API_KEY
          #   valueFrom:
          #     secretKeyRef:
          #       name: relay
          #       key: mailgun_api_key
          # - name: MAILGUN_URL
          #   valueFrom:
          #     secretKeyRef:
          #       name: relay
          #       key: mailgun_url
          - name: METRICS_ADDR
            value: :8081
          imagePullPolicy: IfNotPresent
          ports:
            - name: smtp
              containerPort: 25
              protocol: TCP
            # - name: smtps
            #   containerPort: 465
            #   protocol: TCP
            - name: metrics
              containerPort: 8081
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
            timeoutSeconds: 1
          resources:
            requests:
              memory: 128Mi
              cpu: 10m
            limits:
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
